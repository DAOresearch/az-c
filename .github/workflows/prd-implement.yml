name: PRD Implementation

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write

jobs:
  implement-prd:
    # Only run if:
    # 1. Comment contains "@claude implement"
    # 2. Issue has "prd" label
    # 3. Issue has "prd:ready" label (ready for implementation)
    if: |
      github.event.issue &&
      contains(github.event.comment.body, '@claude implement') &&
      contains(github.event.issue.labels.*.name, 'prd') &&
      contains(github.event.issue.labels.*.name, 'prd:ready')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup git identity
        run: |
          git config --global user.email "claude[bot]@users.noreply.github.com"
          git config --global user.name "claude[bot]"

      - name: Create implementation branch
        id: branch
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | sed 's/PRD: //g' | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | tr -cd '[:alnum:]-')
          BRANCH_NAME="prd-${ISSUE_NUMBER}-${ISSUE_TITLE}"

          git checkout -b "$BRANCH_NAME"
          git push -u origin "$BRANCH_NAME"

          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT

      - name: Update issue label to implementing
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.branch.outputs.issue_number }},
              name: 'prd:ready'
            });

            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.branch.outputs.issue_number }},
              labels: ['prd:implementing']
            });

      - name: Implement PRD with Claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Enable progress tracking for visibility
          track_progress: true

          prompt: |
            REPOSITORY: ${{ github.repository }}
            ISSUE NUMBER: ${{ github.event.issue.number }}
            BRANCH: ${{ steps.branch.outputs.branch_name }}
            BASE BRANCH: ${{ github.event.repository.default_branch }}

            A PRD (Product Requirements Document) has been requested for implementation.

            ## Your Task

            Implement the PRD specified in issue #${{ github.event.issue.number }}.

            ## Process

            1. **Read the PRD**:
               - Check if PRD file exists: `context/active/PRD-${{ github.event.issue.number }}-*.md`
               - If not found, extract PRD content from the issue body

            2. **Analyze the PRD**:
               - Identify complexity tier (Tier 1/2/3)
               - Review all implementation phases
               - Note success criteria
               - Identify all files to create/modify

            3. **Implement systematically**:
               - Follow the implementation phases in order
               - Create/modify files as specified
               - Follow the project's CLAUDE.md style guidelines
               - Run tests after each significant change
               - Fix any errors that occur

            4. **Track progress**:
               - Use TodoWrite tool to track implementation tasks
               - Mark tasks complete as you finish them
               - Provide clear progress updates

            5. **Create Pull Request**:
               - When implementation is complete and tests pass
               - Use `gh pr create` to create a draft PR
               - Link PR to issue #${{ github.event.issue.number }}
               - Include summary of changes
               - Reference the PRD in PR description

            6. **Final update**:
               - Comment on issue with PR link
               - Summarize what was implemented
               - Note any deviations from PRD (if any)

            ## Important Notes

            - Follow the PRD's implementation phases exactly
            - Respect the project's code style (see CLAUDE.md)
            - Ensure all tests pass before creating PR
            - If you encounter blockers, comment on the issue and add "prd:blocked" label
            - The PR should be a draft initially for review

          # Allow full toolset for implementation
          claude_args: |
            --model claude-opus-4-20250514
            --allowed-tools "Read,Write,Edit,Glob,Grep,Bash(git:*),Bash(npm:*),Bash(npx:*),Bash(bun:*),Bash(gh:*),TodoWrite"
